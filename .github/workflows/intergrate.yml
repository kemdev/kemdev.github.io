# name: Build and Deploy
# on: [push]
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     # defaults:
#     #   run:
#     #     working-directory: ./src

#     steps:
#       - name: Checkout üõéÔ∏è
#         uses: actions/checkout@v3 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
#         with:
#           persist-credentials: false

#       - name: Cache  üíæ
#         uses: actions/cache@v2
#         with:
#           path: ${{ github.workspace }}/.next/cache
#           key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

#       - name: Install and Build üîß # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
#         uses: actions/setup-node@v3
#       - run: npm install
#       - run: npm run build
#         env:
#             CI: true

#         # - name: Deploy to GitHub Pages
#       #   uses: JamesIves/github-pages-deploy-action@3.6.2 
#       - name: Deploy üöÄ
#         uses: JamesIves/github-pages-deploy-action@v4.4.0
#         with:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           BRANCH: gh-pages # The branch the action should deploy to.
#           FOLDER: src # The folder the action should deploy.
#           CLEAN: true # Automatically remove deleted files from the deploy branch


name: GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn export

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out