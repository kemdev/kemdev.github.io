[{"D:\\My websites Practice\\portfolio-youtube\\pages\\api\\collaborated.js":"1","D:\\My websites Practice\\portfolio-youtube\\pages\\api\\contact.js":"2","D:\\My websites Practice\\portfolio-youtube\\pages\\api\\general.js":"3","D:\\My websites Practice\\portfolio-youtube\\pages\\api\\highlighted.js":"4","D:\\My websites Practice\\portfolio-youtube\\pages\\api\\replicate.js":"5","D:\\My websites Practice\\portfolio-youtube\\pages\\api\\skills.js":"6","D:\\My websites Practice\\portfolio-youtube\\pages\\index.js":"7","D:\\My websites Practice\\portfolio-youtube\\pages\\_app.js":"8","D:\\My websites Practice\\portfolio-youtube\\pages\\_document.js":"9","D:\\My websites Practice\\portfolio-youtube\\components\\Banner.jsx":"10","D:\\My websites Practice\\portfolio-youtube\\components\\CircularProgressbar.jsx":"11","D:\\My websites Practice\\portfolio-youtube\\components\\Contact.jsx":"12","D:\\My websites Practice\\portfolio-youtube\\components\\Footer.jsx":"13","D:\\My websites Practice\\portfolio-youtube\\components\\Form.jsx":"14","D:\\My websites Practice\\portfolio-youtube\\components\\Navbar.jsx":"15","D:\\My websites Practice\\portfolio-youtube\\components\\Project.jsx":"16","D:\\My websites Practice\\portfolio-youtube\\components\\ProjectContainer.jsx":"17","D:\\My websites Practice\\portfolio-youtube\\components\\ProjectsCard.jsx":"18","D:\\My websites Practice\\portfolio-youtube\\components\\Scene.jsx":"19","D:\\My websites Practice\\portfolio-youtube\\components\\Skills.jsx":"20"},{"size":118,"mtime":1657321377452,"results":"21","hashOfConfig":"22"},{"size":940,"mtime":1657317708260,"results":"23","hashOfConfig":"22"},{"size":113,"mtime":1656797319451,"results":"24","hashOfConfig":"22"},{"size":121,"mtime":1656797433172,"results":"25","hashOfConfig":"22"},{"size":117,"mtime":1656797468958,"results":"26","hashOfConfig":"22"},{"size":111,"mtime":1656718722844,"results":"27","hashOfConfig":"22"},{"size":2175,"mtime":1658331439912,"results":"28","hashOfConfig":"22"},{"size":519,"mtime":1657318363658,"results":"29","hashOfConfig":"22"},{"size":787,"mtime":1658339765539,"results":"30","hashOfConfig":"22"},{"size":2817,"mtime":1658341476680,"results":"31","hashOfConfig":"22"},{"size":1041,"mtime":1658170845656,"results":"32","hashOfConfig":"22"},{"size":8949,"mtime":1658340612757,"results":"33","hashOfConfig":"22"},{"size":1762,"mtime":1658341122133,"results":"34","hashOfConfig":"22"},{"size":2613,"mtime":1658270379212,"results":"35","hashOfConfig":"22"},{"size":3564,"mtime":1658341127336,"results":"36","hashOfConfig":"22"},{"size":2717,"mtime":1658340722132,"results":"37","hashOfConfig":"22"},{"size":575,"mtime":1658174331604,"results":"38","hashOfConfig":"22"},{"size":2357,"mtime":1658342120460,"results":"39","hashOfConfig":"22"},{"size":1646,"mtime":1657159236640,"results":"40","hashOfConfig":"22"},{"size":2496,"mtime":1658340250378,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hnd20n",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\My websites Practice\\portfolio-youtube\\pages\\api\\collaborated.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\api\\contact.js",["107"],[],"// The toturial for this is here; https://dev.to/kennymark/how-to-send-serverless-emails-with-next-js-and-sengrid-40lj\r\nimport sgMail from \"@sendgrid/mail\";\r\nimport { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\nsgMail.setApiKey(process.env.EMAIL_API_KEY);\r\n\r\nexport default async (req, res) => {\r\n  const { email, phone, message, firstName, lastName } = req.body;\r\n  const name = firstName + ' ' + lastName;\r\n  const msg = {\r\n      to: \"abdulkarim.alarmanazi@gmail.com\",\r\n    //   from: email,\r\n      from: 'abdulkarim.alarmanazi@gmail.com',\r\n      name,\r\n      subject: \"New Message from \" + name,\r\n      phone,\r\n      text: message,\r\n    };\r\n    \r\n    try {\r\n    //   console.log(msg);\r\n    await sgMail.send(msg);\r\n    res.json({ success: true, message: `Message has been sent` });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, message: \"Error sending email, please try again later!\", error: error });\r\n  }\r\n};\r\n","D:\\My websites Practice\\portfolio-youtube\\pages\\api\\general.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\api\\highlighted.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\api\\replicate.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\api\\skills.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\index.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\_app.js",[],[],"D:\\My websites Practice\\portfolio-youtube\\pages\\_document.js",["108"],[],"// pages/_document.js\r\nimport { Html, Head, Main, NextScript } from \"next/document\";\r\n\r\nexport default function Document() {\r\n  return (\r\n    <Html>\r\n      <Head>\r\n        <link\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\"\r\n          rel=\"stylesheet\"\r\n        />\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <link href=\"https://fonts.googleapis.com/css?family=Raleway\" rel=\"stylesheet\"></link>\r\n      </Head>\r\n      <body>\r\n        <Main />\r\n        <NextScript />\r\n      </body>\r\n    </Html>\r\n  );\r\n}\r\n","D:\\My websites Practice\\portfolio-youtube\\components\\Banner.jsx",["109"],[],"import { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Image from \"next/image\";\r\n\r\nimport headerImage from '../public/img/header-img.svg';\r\n\r\n// react bootstrap icons\r\nimport { ArrowRightCircle } from \"react-bootstrap-icons\";\r\n\r\n//framer motion\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Banner() {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const toRotate = [\"Fullstack Developer\", \"Frontend Developer\"];\r\n  const [text, setText] = useState(\"\");\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n\r\n  // period until it delete the current word\r\n  const period = 800;\r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => {\r\n      clearInterval(ticker);\r\n    };\r\n  }, [text]);\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate?.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting\r\n      ? fullText.substring(0, text?.length - 1)\r\n      : fullText.substring(0, text?.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) setDelta((prevDelta) => prevDelta / 2);\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === \"\") {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setDelta(500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col xs={12} md={6} xl={7}>\r\n            <span className=\"tagline user-select-none\">\r\n              Welcome to my Portfolio\r\n            </span>\r\n            <h1>\r\n              {`Hi I'm Kareem `}\r\n              <span className=\"wrap txt-rotate\">{text}</span>\r\n            </h1>\r\n            <button onClick={() => console.log(\"connect\")}>\r\n              Let&apos;s Connect <ArrowRightCircle size={25} />\r\n            </button>\r\n          </Col>\r\n          <Col xs={12} md={6} xl={5}>\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0 }}\r\n              whileInView={{ opacity: 1, scale: 1 }}\r\n              transition={{ type: \"spring\", stiffness: 100 }}\r\n            >\r\n              <Image\r\n                src={headerImage}\r\n                alt=\"Header img\"\r\n                // width=\"100%\"\r\n                // height=\"100%\"\r\n                // layout=\"responsive\"\r\n                // objectFit=\"contain\"\r\n                className=\"header-img\"\r\n              />\r\n            </motion.div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div\r\n        id=\"skills\"\r\n        style={{ position: \"absolute\", height: 150, bottom: \"8rem\" }}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n","D:\\My websites Practice\\portfolio-youtube\\components\\CircularProgressbar.jsx",["110"],[],"import React, { useEffect, useState, Component } from \"react\";\r\n// import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport { Progress as CircularProgressbar } from \"antd\";\r\n\r\n\r\nexport default function AnimatedSkillbar({ text,  value }) {\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) =>\r\n                prevProgress >= value ? value : prevProgress + 10\r\n            );\r\n        }, 200);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n    return (\r\n        <CircularProgressbar\r\n            percent={progress}\r\n            className=\"testSvg\"\r\n            type=\"circle\"\r\n            trailColor='#252525'\r\n            strokeColor={{\r\n                \"0%\": \"rgba(170, 54, 124, 1)\",\r\n                \"100%\": \"rgba(74, 47, 189, 1)\",\r\n            }}\r\n            width={200}\r\n            strokeWidth={12}\r\n            format={(t) => text}\r\n        />\r\n    );\r\n}\r\n","D:\\My websites Practice\\portfolio-youtube\\components\\Contact.jsx",["111"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Image from \"next/image\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function Contact() {\r\n  const formInitialDetails = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\r\n  const [isHide, setIsHide] = useState(false);\r\n  const [buttonText, setButtonText] = useState(\"Send\");\r\n  const [status, setStatus] = useState({});\r\n  const [validation, setValidation] = useState({});\r\n\r\n  const onFormUpdate = (category, value) => {\r\n    setFormDetails({ ...formDetails, [category]: value });\r\n  };\r\n\r\n  const reset = () => {\r\n    setFormDetails(formInitialDetails);\r\n  };\r\n\r\n  const validate = () => {\r\n    const { firstName, lastName, email, message } = formDetails;\r\n    if (\r\n      formDetails.firstName === \"\" ||\r\n      formDetails.lastName === \"\" ||\r\n      formDetails.email === \"\" ||\r\n      formDetails.message === \"\"\r\n    ) {\r\n      return setValidation(false);\r\n    }\r\n    return setValidation(true);\r\n  };\r\n  console.log(\"Validation\", validation);\r\n\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      const send = await fetch(\"/api/contact\", {\r\n        method: \"POST\",\r\n        headers: { \"content-type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const response = await send.json();\r\n      //if sucess do whatever you like, i.e toast notification\r\n      // setTimeout(() => reset(), 2000);\r\n      if (response.success) {\r\n        setStatus({ success: true, message: response.message });\r\n        setButtonText(\"Sent\");\r\n        setTimeout(() => reset(), 2000);\r\n      } else {\r\n        setStatus({ success: false, message: response.message });\r\n      }\r\n    } catch (error) {\r\n      // toast error message. whatever you wish\r\n    }\r\n  };\r\n\r\n  const resetAll = () => {\r\n    reset();\r\n    setStatus({});\r\n    setButtonText(\"Send\");\r\n    setIsHide(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (validation === true) {\r\n      setIsHide(true);\r\n      setButtonText(\"Sending...\");\r\n      handleSubmit(formDetails);\r\n    }\r\n  }, [validation]);\r\n\r\n  return (\r\n    <section className=\"contact\" id=\"contact\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col xs={12} md={6}>\r\n            <Image\r\n              src=\"/img/contact-img.svg\"\r\n              alt=\"Contact me\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              layout=\"responsive\"\r\n            />\r\n          </Col>\r\n          <Col\r\n            xs={12}\r\n            md={6}\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateRows: \"80px 350px 80px\",\r\n            }}\r\n          >\r\n            <h2>Contact Me</h2>\r\n            <div className=\"contact-parent\">\r\n              <AnimatePresence exitBeforeEnter>\r\n                {Object.keys(status).length !== 0 && (\r\n                  <motion.div\r\n                    key={\"status\" + status.success}\r\n                    // positionTransition\r\n                    initial={{ opacity: 0, scale: 1.6 }}\r\n                    animate={{\r\n                      opacity: 1,\r\n                      scale: 1,\r\n                      transition: { delay: 0.5 },\r\n                    }}\r\n                    exit={{ opacity: 0, scale: 0.5 }}\r\n                  >\r\n                    <motion.div className={`h-100 d-flex align-items-center`}>\r\n                      <div\r\n                        className={`alert alert-${\r\n                          (status.success && \"success\") || \"danger\"\r\n                        } w-100 h-50 d-flex align-items-center `}\r\n                      >\r\n                        {status.message}\r\n                      </div>\r\n                    </motion.div>\r\n                  </motion.div>\r\n                )}\r\n              </AnimatePresence>\r\n              <AnimatePresence exitBeforeEnter>\r\n                {Object.keys(status).length === 0 &&\r\n                  !status.success &&\r\n                  isHide === false && (\r\n                    <motion.form\r\n                      key={\"form\" + status.success}\r\n                      id=\"contact-form\"\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        validate();\r\n                      }}\r\n                      layout\r\n                      initial={{ opacity: 0, scale: 0.3 }}\r\n                      animate={{\r\n                        opacity: 1,\r\n                        scale: 1,\r\n                        transition: { delay: 0.5 },\r\n                      }}\r\n                      exit={{ opacity: 0, scale: 0.1 }}\r\n                    >\r\n                      <Row>\r\n                        <Col sm={6} className=\"px-1\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={formDetails.firstName}\r\n                            placeholder=\"First Name *\"\r\n                            onChange={(e) => {\r\n                              onFormUpdate(\"firstName\", e.target.value);\r\n                            }}\r\n                            style={{\r\n                              border:\r\n                                formDetails.firstName.length === 0 &&\r\n                                !validation &&\r\n                                \"2px solid red\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                        <Col sm={6} className=\"px-1\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={formDetails.lastName}\r\n                            placeholder=\"Last Name *\"\r\n                            onChange={(e) => {\r\n                              onFormUpdate(\"lastName\", e.target.value);\r\n                            }}\r\n                            style={{\r\n                              border:\r\n                                formDetails.lastName.length === 0 &&\r\n                                !validation &&\r\n                                \"2px solid red\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                        {/* ------------- */}\r\n                        <Col sm={6} className=\"px-1\">\r\n                          <input\r\n                            type=\"email\"\r\n                            value={formDetails.email}\r\n                            placeholder=\"Email Address *\"\r\n                            onChange={(e) => {\r\n                              onFormUpdate(\"email\", e.target.value);\r\n                            }}\r\n                            style={{\r\n                              border:\r\n                                formDetails.email.length === 0 &&\r\n                                !validation &&\r\n                                \"2px solid red\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                        <Col sm={6} className=\"px-1\">\r\n                          <input\r\n                            type=\"tel\"\r\n                            value={formDetails.phone}\r\n                            placeholder=\"Phone Number\"\r\n                            onChange={(e) => {\r\n                              onFormUpdate(\"phone\", e.target.value);\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                        <Col sm={12} className=\"px-1\">\r\n                          <textarea\r\n                            rows=\"6\"\r\n                            placeholder=\"Message *\"\r\n                            value={formDetails.message}\r\n                            onChange={(e) => {\r\n                              onFormUpdate(\"message\", e.target.value);\r\n                            }}\r\n                            style={{\r\n                              border:\r\n                                formDetails.message.length === 0 &&\r\n                                !validation &&\r\n                                \"2px solid red\",\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </motion.form>\r\n                  )}\r\n              </AnimatePresence>\r\n            </div>\r\n            {Object.keys(status).length !== 0 && (\r\n              <button className=\"py-2 px-4\" onClick={resetAll}>\r\n                <span>\r\n                  {status.success ? \"Send Another Message\" : \"Try Again\"}\r\n                </span>\r\n              </button>\r\n            )}\r\n            {Object.keys(status).length === 0 && !status.success && (\r\n              <button type=\"submit\" form=\"contact-form\">\r\n                <span>{buttonText}</span>\r\n              </button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n","D:\\My websites Practice\\portfolio-youtube\\components\\Footer.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\Form.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\Navbar.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\Project.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\ProjectContainer.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\ProjectsCard.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\Scene.jsx",[],[],"D:\\My websites Practice\\portfolio-youtube\\components\\Skills.jsx",[],[],{"ruleId":"112","severity":1,"message":"113","line":7,"column":1,"nodeType":"114","endLine":27,"endColumn":3},{"ruleId":"115","severity":1,"message":"116","line":18,"column":9,"nodeType":"117","endLine":18,"endColumn":87},{"ruleId":"118","severity":1,"message":"119","line":32,"column":6,"nodeType":"120","endLine":32,"endColumn":12,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":78,"column":6,"nodeType":"120","endLine":78,"endColumn":18,"suggestions":"125"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@next/next/google-font-display","A font-display parameter is missing (adding `&display=optional` is recommended). See: https://nextjs.org/docs/messages/google-font-display","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array. If 'setProgress' needs the current value of 'value', you can also switch to useReducer instead of useState and read 'value' in the reducer.",["127"],"React Hook useEffect has missing dependencies: 'formDetails' and 'handleSubmit'. Either include them or remove the dependency array.",["128"],{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [delta, text, tick]",{"range":"135","text":"136"},"Update the dependencies array to be: [value]",{"range":"137","text":"138"},"Update the dependencies array to be: [formDetails, handleSubmit, validation]",{"range":"139","text":"140"},[885,891],"[delta, text, tick]",[612,614],"[value]",[2232,2244],"[formDetails, handleSubmit, validation]"]